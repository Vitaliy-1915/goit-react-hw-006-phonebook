{"version":3,"sources":["Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Components/Button/Button.module.css","redux/contacts/contacts-actions.jsx","redux/contacts/contacts-reducer.jsx","redux/store.jsx","Components/PhoneBookTitle/PhoneBookTitle.jsx","Components/Button/Button.jsx","Components/ContactsList/ContactsList.jsx","Components/Form/Form.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","addContact","createAction","value","payload","id","unId","deleteContact","changeFilter","items","createReducer","actions","state","action","find","s","name","toLowerCase","includes","alert","filter","contact","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","PhoneBookTitle","title","Button","props","type","text","onClick","className","button","ContactsList","useSelector","normalizeContacts","toLocaleLowerCase","item","getVisibleContacts","dispatch","useDispatch","ul","map","number","li","onDeleteContact","Form","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","onSubmit","reset","form","this","label","input","onChange","pattern","required","Component","connect","Filter","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4910eb3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactsList_ul__33EfU\",\"li\":\"ContactsList_li__3IN-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3SyeR\",\"input\":\"Filter_input__nvu5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__vPJvQ\"};","import { v4 as unId } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', value => {\n  return {\n    payload: {\n      id: unId(),\n      ...value,\n    },\n  };\n});\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n// import { v4 as unId } from 'uuid';\n// import { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\n\n// export const addContact = value => ({\n//   type: ADD,\n//   payload: {\n//     id: unId(),\n//     ...value,\n//   },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: DELETE,\n//   payload: contactId,\n// });\n\n// export const changeFilter = value => ({\n//   type: CHANGE_FILTER,\n//   payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, action) =>\n    state.find(s =>\n      s.name.toLowerCase().includes(action.payload.name.toLowerCase()),\n    )\n      ? alert(`${action.payload.name.toLowerCase()} is already in contacts`) ??\n        state\n      : [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n\n// import { combineReducers } from 'redux';\n// import { ADD, DELETE, CHANGE_FILTER } from './contacts-types';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case ADD:\n//       return state.find(s =>\n//         s.name.toLowerCase().includes(payload.name.toLowerCase()),\n//       )\n//         ? alert(`${payload.name.toLowerCase()} is already in contacts`) ?? state\n//         : [...state, payload];\n\n//     case DELETE:\n//       return state.filter(contact => contact.id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\n// export default combineReducers({\n//   items,\n//   filter,\n// });\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = getDefaultMiddleware =>\n  getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  });\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n\n// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contactsReduser from './contacts/contacts-reduser';\n\n// const rootReduser = combineReducers({\n//   contacts: contactsReduser,\n// });\n\n// const store = createStore(rootReduser, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\n\nfunction PhoneBookTitle({ title }) {\n  return <h2>{title}</h2>;\n}\n\nexport default PhoneBookTitle;\n","import React from 'react';\nimport s from '../Button/Button.module.css';\n\nfunction Button(props) {\n  const { type, text, onClick } = props;\n  return (\n    <>\n      <button type={type} onClick={onClick} className={s.button}>\n        {text}\n      </button>\n    </>\n  );\n}\n\nexport default Button;\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '../Button/Button';\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport s from '../ContactsList/ContactsList.module.css';\n// import { v4 as unId } from \"uuid\";\n\n// function ContactsList(props) {\n//   const { contacts, onDeleteContact } = props;\n\nconst getVisibleContacts = (filter, items) => {\n  const normalizeContacts = filter.toLocaleLowerCase();\n\n  return items.filter(item =>\n    item.name.toLowerCase().includes(normalizeContacts),\n  );\n};\n\nexport default function ContactsList() {\n  const contacts = useSelector(state =>\n    getVisibleContacts(state.contacts.filter, state.contacts.items),\n  );\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            text=\"Delete\"\n            onClick={() => onDeleteContact(id)}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\n// const getVisibleContacts = (filter, items) => {\n//   const normalizeContacts = filter.toLocaleLowerCase();\n\n//   return items.filter(item =>\n//     item.name.toLowerCase().includes(normalizeContacts),\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   contacts: getVisibleContacts(state.contacts.filter, state.contacts.items),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteContact: id => dispatch(deleteContact(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React, { Component } from 'react';\nimport Button from '../Button/Button';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport s from '../Form/Form.module.css';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    // const { name, value } = e.currentTarget;\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <Button type=\"submit\" text=\"Add contact\" />\n      </form>\n    );\n  }\n}\n// console.log(addContact());\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(addContact(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\n// import { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\nimport s from '../Filter/Filter.module.css';\n\n// function Filter(props) {\n// const { onChange, value } = props;\n\nexport default function Filter() {\n  const value = useSelector(state => state.contacts.Filter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.Filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import './App.css';\nimport React, { Component } from 'react';\nimport PhoneBookTitle from './Components/PhoneBookTitle/PhoneBookTitle';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PhoneBookTitle title=\"Phonebook\" />\n        <Form />\n        <PhoneBookTitle title=\"Contacts\" />\n        <Filter />\n        <ContactsList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n// import './App.css';\n// import React, { Component } from 'react';\n// import PhoneBookTitle from './Components/PhoneBookTitle/PhoneBookTitle';\n// import ContactsList from './Components/ContactsList/ContactsList';\n// import Form from './Components/Form/Form';\n// import Filter from './Components/Filter/Filter';\n// // import { v4 as unId } from 'uuid';\n\n// export class App extends Component {\n//   // state = {\n//   // contacts: [\n//   //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   // ],\n//   // filter: '',\n//   // };\n\n//   // componentDidMount() {\n//   //   const contacts = localStorage.getItem('contacts');\n//   //   const parsedContacts = JSON.parse(contacts);\n\n//   //   if (parsedContacts) {\n//   //     this.setState({ contacts: parsedContacts });\n//   //   }\n//   // }\n\n//   // componentDidUpdate(prevProps, prevState) {\n//   //   if (this.state.contacts !== prevState.contacts) {\n//   //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//   //   }\n//   // }\n\n//   // formSubmit = value => {\n//   //   const contact = {\n//   //     id: unId(),\n//   //     name: value.name,\n//   //     number: value.number,\n//   //   };\n\n//   //   //   this.setState((prevState) => ({\n//   //   // contacts: [...prevState.contacts, contact],\n//   //   //   }));\n\n//   //   this.state.contacts.find(cont =>\n//   //     cont.name.toLowerCase().includes(contact.name.toLowerCase()),\n//   //   )\n//   //     ? alert(`${contact.name} is already in contacts`)\n//   //     : this.setState(prevState => ({\n//   //         contacts: [...prevState.contacts, contact],\n//   //       }));\n//   // };\n\n//   // onChangeFilter = e => {\n//   //   this.setState({\n//   //     filter: e.currentTarget.value,\n//   //   });\n//   // };\n\n//   // onDeleteContact = contactId => {\n//   //   // console.log(contactId);\n//   //   this.setState(prevState => ({\n//   //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n//   //   }));\n//   // };\n\n//   render() {\n//     // const { contacts, filter } = this.state;\n\n//     // const normalizeContacts = this.state.filter.toLocaleLowerCase();\n\n//     // const filterContacts = this.state.contacts.filter(contact =>\n//     //   contact.name.toLowerCase().includes(normalizeContacts),\n//     // );\n\n//     return (\n//       <div className=\"App\">\n//         <PhoneBookTitle title=\"Phonebook\" />\n//         {/* <Form onSubmit={this.formSubmit} /> */}\n//\n//         <PhoneBookTitle title=\"Contacts\" />\n//         {/* <Filter value={this.state.filter} onChange={this.onChangeFilter} /> */}\n//\n//         {/* <ContactsList contacts={filterContacts} onDeleteContact={this.onDeleteContact} /> */}\n//\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport store from './redux/store';\n// import testAction from './redux/actions';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__kmJCe\",\"label\":\"Form_label__kbqmv\",\"input\":\"Form_input__2ZKj5\"};"],"sourceRoot":""}